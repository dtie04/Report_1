#include <Wire.h>
#include <Adafruit_MPU6050.h>
#include <Adafruit_Sensor.h>

#define IN1 2
#define IN2 3
#define IN3 4
#define IN4 5

#define trigPin 6
#define echoPin 7
#define leftSensor A0
#define rightSensor A1

Adafruit_MPU6050 mpu;

void setup() {
  Serial.begin(9600);

  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);

  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
}

void loop() {
  int leftValue = analogRead(leftSensor);
  int rightValue = analogRead(rightSensor);

  // Line Following
  if (leftValue > 500 && rightValue > 500) {
    moveForward();
  } else if (leftValue > 500 && rightValue < 500) {
    turnRight();
  } else if (leftValue < 500 && rightValue > 500) {
    turnLeft();
  } else {
    stopMotors();
  }

  // Obstacle Detection
  if (detectObstacle()) {
    // Take evasive action (e.g., stop or change direction)
    stopMotors();
  }

  // MPU-6050 Stability Control
  sensors_event_t a, g, temp;
  mpu.getEvent(&a, &g, &temp);

  // Adjust motors based on MPU-6050 data if needed

  delay(50); // Adjust delay as needed
}

void moveForward() {
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
}

void turnLeft() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
}

void turnRight() {
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
}

void stopMotors() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, LOW);
}

bool detectObstacle() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);

  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  long duration = pulseIn(echoPin, HIGH);
  float distance = duration * 0.034 / 2;

  if (distance < 10) {
    return true; // Obstacle detected
  } else {
    return false; // No obstacle
  }
}
